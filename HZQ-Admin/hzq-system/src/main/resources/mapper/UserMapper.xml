<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzqing.system.mapper.UserMapper">
    <resultMap id="baseResult" type="user">
        <result column="user_id" property="userId"/>
        <result column="login_name" property="loginName" />
        <result column="user_name" property="userName" />
        <result column="avatar" property="avatar" />
        <result column="password" property="password" />
        <result column="phone" property="phone" />
        <result column="del_flag" property="delFlag" />
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="depart_id" property="departId" />
    </resultMap>

    <sql id="selectUser">
        SELECT
            user_id,
            login_name,
            user_name,
            avatar,
            password,
            phone,
            create_by,
            create_time,
            update_by,
            update_time,
            depart_id
        FROM
            sys_user
    </sql>

    <select id="selectTableList" resultMap="baseResult">
        <include refid="selectUser"/>
        WHERE
          del_flag = 'N'
        <if test="userName != null and userName != ''">
          AND user_name LIKE  '%${userName}%'
        </if>
    </select>

    <insert id="insertUser" parameterType="uservo" >
        INSERT INTO sys_user (
          user_id,
          login_name,
          user_name,
          avatar,
          password,
          phone,
          create_by,
          create_time,
          update_by,
          update_time,
          depart_id
        ) VALUE (
          #{userId},
          #{loginName},
          #{userName},
          #{avatar},
          #{password},
          #{phone},
          #{createBy},
          #{createTime},
          #{updateBy},
          #{updateTime},
          #{departId}
        )
    </insert>

    <select id="selectUserById" parameterType="string" resultMap="baseResult">
      <include refid="selectUser" />
      WHERE
        user_id = #{userId}
    </select>

    <delete id="deleteUserByIds" parameterType="string">
        UPDATE sys_user SET del_flag = 'Y' WHERE  user_id IN
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <update id="updateUser" parameterType="uservo">
        UPDATE sys_user
        <set>
            <if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="password != null and password != '' ">password = #{password},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="departId != null and departId != ''">depart_id = #{departId}</if>
        </set>
        WHERE
          user_id = #{userId}
    </update>
</mapper>